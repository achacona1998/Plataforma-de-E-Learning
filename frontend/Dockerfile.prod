# ==============================================
# DOCKERFILE PARA FRONTEND - PRODUCCIÓN
# ==============================================

# ==============================================
# STAGE 1: BUILD
# ==============================================
FROM node:18-alpine AS build

# Instalar dependencias del sistema
RUN apk add --no-cache git

# Establecer directorio de trabajo
WORKDIR /app

# Copiar archivos de dependencias
COPY package*.json ./

# Instalar dependencias
RUN npm ci --silent --only=production=false

# Copiar código fuente
COPY . .

# Configurar variables de entorno para build
ENV NODE_ENV=production
ENV GENERATE_SOURCEMAP=false
ENV REACT_APP_API_URL=${REACT_APP_API_URL}
ENV REACT_APP_STRIPE_PUBLISHABLE_KEY=${REACT_APP_STRIPE_PUBLISHABLE_KEY}

# Construir aplicación para producción
RUN npm run build

# Optimizar build
RUN npm prune --production

# ==============================================
# STAGE 2: NGINX RUNTIME
# ==============================================
FROM nginx:alpine AS runtime

# Instalar dependencias adicionales
RUN apk add --no-cache curl

# Remover configuración por defecto de nginx
RUN rm /etc/nginx/conf.d/default.conf

# Copiar configuración personalizada de nginx
COPY nginx.conf /etc/nginx/nginx.conf

# Copiar archivos estáticos desde stage de build
COPY --from=build /app/build /usr/share/nginx/html

# Crear directorio para logs
RUN mkdir -p /var/log/nginx

# Configurar permisos
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /etc/nginx/conf.d

# Cambiar a usuario nginx
USER nginx

# Exponer puertos
EXPOSE 80 443

# Configurar healthcheck
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:80 || exit 1

# Comando por defecto
CMD ["nginx", "-g", "daemon off;"]

# ==============================================
# LABELS PARA METADATA
# ==============================================
LABEL maintainer="EduPlatform Team"
LABEL version="1.0.0"
LABEL description="Frontend React para plataforma de e-learning"
LABEL org.opencontainers.image.source="https://github.com/yourorg/eduplatform"

# ==============================================
# INSTRUCCIONES DE BUILD
# ==============================================
# Para construir la imagen:
# docker build -f Dockerfile.prod -t eduplatform-frontend:latest .
#
# Para ejecutar el contenedor:
# docker run -d \
#   --name eduplatform-frontend \
#   -p 80:80 \
#   -p 443:443 \
#   eduplatform-frontend:latest
#
# Para ver logs:
# docker logs -f eduplatform-frontend
#
# Para acceder al contenedor:
# docker exec -it eduplatform-frontend sh

# ==============================================
# OPTIMIZACIONES APLICADAS
# ==============================================
# 1. Multi-stage build para reducir tamaño final
# 2. Imagen Alpine para menor footprint
# 3. Usuario no-root para seguridad
# 4. Build optimizado sin source maps
# 5. Nginx para servir archivos estáticos
# 6. Healthcheck para monitoreo
# 7. Configuración de nginx optimizada
# 8. Cache de layers optimizado
# 9. Limpieza de dependencias de desarrollo
# 10. Compresión gzip habilitada en nginx