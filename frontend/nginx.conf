# ==============================================
# CONFIGURACIÓN DE NGINX PARA FRONTEND
# ==============================================

# Configuración principal
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Configuración de eventos
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# Configuración HTTP
http {
    # Tipos MIME
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Formato de logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Configuración de rendimiento
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;

    # Configuración de compresión
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

    # Configuración de seguridad
    server_tokens off;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;

    # Configuración de cache
    map $sent_http_content_type $expires {
        "text/html"                 epoch;
        "text/html; charset=utf-8"  epoch;
        default                     off;
    }

    # Servidor principal
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Configuración de expires
        expires $expires;

        # Configuración para archivos estáticos
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # Configuración para el manifest y service worker
        location ~* \.(webmanifest|manifest\.json)$ {
            expires 0;
            add_header Cache-Control "public, max-age=0, must-revalidate";
        }

        location = /service-worker.js {
            expires 0;
            add_header Cache-Control "public, max-age=0, must-revalidate";
        }

        # Configuración para API (proxy al backend)
        location /api/ {
            proxy_pass http://backend:5000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }

        # Configuración para React Router (SPA)
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # Configuración para health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Configuración para robots.txt
        location = /robots.txt {
            log_not_found off;
            access_log off;
        }

        # Configuración para favicon
        location = /favicon.ico {
            log_not_found off;
            access_log off;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Denegar acceso a archivos ocultos
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Configuración de error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # Configuración HTTPS (comentada, descomentar en producción)
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name yourdomain.com www.yourdomain.com;
    #     root /usr/share/nginx/html;
    #     index index.html index.htm;
    #
    #     # Certificados SSL
    #     ssl_certificate /etc/ssl/certs/fullchain.pem;
    #     ssl_certificate_key /etc/ssl/certs/privkey.pem;
    #
    #     # Configuración SSL moderna
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #
    #     # Misma configuración que el servidor HTTP
    #     expires $expires;
    #
    #     location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
    #         expires 1y;
    #         add_header Cache-Control "public, immutable";
    #         try_files $uri =404;
    #     }
    #
    #     location /api/ {
    #         proxy_pass http://backend:5000;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         proxy_cache_bypass $http_upgrade;
    #     }
    #
    #     location / {
    #         try_files $uri $uri/ /index.html;
    #         add_header Cache-Control "no-cache, no-store, must-revalidate";
    #         add_header Pragma "no-cache";
    #         add_header Expires "0";
    #     }
    # }
    #
    # # Redirección HTTP a HTTPS
    # server {
    #     listen 80;
    #     listen [::]:80;
    #     server_name yourdomain.com www.yourdomain.com;
    #     return 301 https://$server_name$request_uri;
    # }
}

# ==============================================
# NOTAS DE CONFIGURACIÓN
# ==============================================
# 1. Esta configuración está optimizada para React SPA
# 2. Incluye proxy reverso para el backend
# 3. Configuración de cache agresiva para assets estáticos
# 4. Headers de seguridad incluidos
# 5. Compresión gzip habilitada
# 6. Configuración SSL lista para producción
# 7. Health check endpoint disponible
# 8. Manejo correcto de React Router
# 9. Optimizaciones de rendimiento aplicadas
# 10. Logs configurados apropiadamente